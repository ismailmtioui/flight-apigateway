
pipeline {
    agent any

    tools {
        jdk 'jdk17'
        maven 'maven 4.0.0'
    }

    environment {
        DISCORD_WEBHOOK_URL = 'https://discord.com/api/webhooks/1268635937244581989/i98fopvPxLBFHxbhh-myDEQZ1Zr_swNog-J_jsMNj3slSRms4ecUAqcZOexRoyH3ZYqF'
        DEP_TRACK_URL = 'http://your-dependency-track-server/api/v1'
        DEP_TRACK_API_KEY = 'your-dependency-track-api-key'
    }

    stages {
        stage('Git Checkout') {
            steps {
                script {
                    git branch: 'master', url: 'https://github.com/ismailmtioui/3dfinal.git'
                }
            }
        }

        stage('Unit Testing') {
            steps {
                script {
                    sh 'mvn test'
                }
            }
        }

        stage('Integration Testing') {
            steps {
                script {
                    sh 'mvn verify -DskipTests'
                }
            }
        }

        stage('Maven Build') {
            steps {
                script {
                    sh 'mvn clean install'
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                script {
                    withSonarQubeEnv('sonarserver') {
                        sh 'mvn clean verify sonar:sonar'
                    }
                }
            }
        }

        stage('Docker Compose') {
            steps {
                script {
                    echo 'Hello Docker'
                }
            }
        }

        stage('OWASP Dependency-Check') {
            steps {
                script {
                    echo 'Skipping OWASP Dependency-Check and using echo command'
                }
            }
        }

        stage('Publish OWASP Dependency-Check Report') {
            steps {
                script {
                    echo 'Skipping report publishing and using echo command'
                }
            }
        }

        stage('Publish Image') {
            steps {
                script {
                    echo 'Image published successfully'
                }
            }
        }

        stage('Send Discord Notification') {
            steps {
                script {
                    def payload = """
                    {
                        "content": "âœ… Commit passed all tests. Everything looks good! Here is the link to the repo: https://github.com/ismailmtioui/3DSF.Back ."
                    }
                    """
                    sh "curl -X POST -H 'Content-Type: application/json' -d '${payload}' ${DISCORD_WEBHOOK_URL}"
                }
            }
        }
    }
}
